theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "stack",stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "stack",stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(stat = "bin",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(stat = "bin",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "fill", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "fill", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "count",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "count",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "bin",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "bin",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity", aes(fill = "red"),
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity", aes(fill = "blue"),
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(aes(fill = "red"), position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(aes(fill = "blue"), position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries')) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities')) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(aes(fill = "red"), position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(aes(fill = "blue"), position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
scale_fill_manual(values=cbbPalette) +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type,
y=c(topfatal_aggr_human_mydata$fatalities_number, topfatal_aggr_human_mydata$injuries_number))) +
geom_bar(position = "dodge", stat = "identity",
colour = 'Human injuries', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type,
y=c(topfatal_aggr_human_mydata$fatalities_number, topfatal_aggr_human_mydata$injuries_number))) +
geom_bar(position = "dodge", stat = "identity",
colour = 'Human injuries', group = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type,
y=c(topfatal_aggr_human_mydata$fatalities_number))) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
p2<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
p2
plot_harm_humans<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_harm_humans
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
View(mydata)
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(axis.text.y = element_text(vjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
library(ggplot2)
plot_harm_humans<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_harm_humans
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(axis.text.y = element_text(vjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
aggr_human_mydata<-aggregate(x=cbind(mydata$FATALITIES, mydata$INJURIES), by=list(mydata$EVTYPE), FUN=sum, na.rm=TRUE)
aggr_damages_mydata<-aggregate(x=cbind(mydata$PROPDMG, mydata$CROPDMG), by=list(mydata$EVTYPE), FUN=sum, na.rm=TRUE)
colnames(aggr_human_mydata)<-c("event_type", "fatalities_number", "injuries_number")
aggr_human_mydata<-aggr_human_mydata[order(-aggr_human_mydata$fatalities_number),]
topfatal_aggr_human_mydata<-aggr_human_mydata[1:10,]
colnames(aggr_damages_mydata)<-c("event_type", "property_damages", "crop_damages")
aggr_damages_mydata<-aggr_damages_mydata[order(-aggr_damages_mydata$property_damages),]
topprop_aggr_damages_mydata<-aggr_damages_mydata[1:10,]
library(ggplot2)
plot_harm_humans<-ggplot(topfatal_aggr_human_mydata, aes(topfatal_aggr_human_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$injuries_number, colour = 'Human injuries', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topfatal_aggr_human_mydata$fatalities_number, colour = 'Human fatalities', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_harm_humans
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(axis.text.y = element_text(vjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(axis.text.y = element_text(hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(axis.text.y = element_text(vjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, vjust = 2)) +
theme(axis.text.y = element_text(hjust = 1)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(axis.text.y = element_text(vjust = 3)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
plot_damages<-ggplot(topprop_aggr_damages_mydata, aes(topprop_aggr_damages_mydata$event_type)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$property_damages, colour = 'Property damages', group = 1)) +
geom_bar(position = "dodge", stat = "identity",
aes(y = topprop_aggr_damages_mydata$crop_damages, colour = 'Crop damages', group = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(axis.text.y = element_text(hjust = 3)) +
xlab("Types of weather events") +
ylab("Number of incidents") +
ggtitle('Weather events that harmed people since 1950')
plot_damages
?axis.text.y
??axis.text.y
?vjust
??vjust
View(mydata)
View(myd)
View(topprop_aggr_damages_mydata)
?geom_bar
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", temp, method = "libcurl", mode = "wb")
mydata <- read.csv(temp)
unlink(temp)
View(mydata)
shiny::runApp('country/aquaculture_eu_country')
runApp('country/aquaculture_production_eu_country_8407')
runApp('country/aquaculture_production_eu_country_8407')
runApp('country/aquaculture_eu_country')
runApp('country/area_eu_cultivated')
runApp('country/area_eu_cultivated')
mydata<-read.csv("./payments.csv", sep=";")
mydata<-read.csv(".C:\Users\Ilias Tsergoulas\Dropbox\Website\shiny\subsidies\payments per measure\payments.csv", sep=";")
mydata<-read.csv(".C:/Users/Ilias Tsergoulas/Dropbox/Website/shiny/subsidies/payments per measure/payments.csv", sep=";")
mydata<-read.csv(".C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=";")
mydata<-read.csv(".C:/Users/Ilias Tsergoulas/Dropbox/Website/shiny/subsidies/payments per measure/payments.csv", sep=";")
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=";")
View(mydata)
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",")
View(mydata)
titleTextStyle="{color:'#336600',fontSize:14}", vAxis="{title:'Dhm;osia Dap;anh ('}",
hAxis="{title:'Έτος'}",backgroundColor="#d9ffb3", width=700, height=500, legend='none'))
})
output$table <- renderDataTable({ # Creating data table
colnames(mydata)<-c("Μέτρο", "Συνολικές εξαγωγές", "Έτος")
mydata[c("Χώρα", "Συνολικές εξαγωγές", "Έτος")]
})
output$summary <- renderDataTable({ # Creating summary by country
mysummary <- data.frame(
aggregate(total_agri_exports~country, mydata_summary(), min),
aggregate(total_agri_exports~country, mydata_summary(), max),
aggregate(total_agri_exports~country, mydata_summary(), mean))
mysummary <- mysummary[,c(1,2,4,6)]
colnames(mysummary) <- c("Χώρα", "Ελάχιστη αξία εξαγωγών", "Μέγιστη αξία εξαγωγών", "Μέση αξία εξαγωγών")
mysummary
})
output$timeline<-renderPlot({ # Creating timeline for top 5 countries
ggplot(mydata_top_five(), aes(x = year, y = total_agri_exports, group = country, colour = country)) +
geom_line() +
scale_x_discrete(expand=c(0, 0.5)) +
scale_y_continuous(labels = comma) +
xlab("Έτος") + ylab("Συνολικές εξαγωγές (δολάρια)") + ggtitle("5 χώρες με τη μεγαλύτερη αξία εξαγόμενων προϊόντων") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=20)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=14)) +
geom_dl(aes(label = country), method = list(dl.combine("first.points", "last.points"), cex = 0.8))
})
output$downloadData <- downloadHandler( # Creating download button
filename = function() {paste('mydata', '.csv', sep='')},
content = function(file) {
write.csv(mydata, file)
})
}
shinyApp(ui, server)
runApp('subsidies/payments per measure')
?ρεαδ.ψσω
?read.csv
runApp('subsidies/payments per measure')
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
View(mydata)
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΓΤΑΑ', ] # Filtering data
View(mydata)
runApp('subsidies/payments per measure')
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ', ] # Filtering data
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
View(mydata)
View(mydata)
View(mydata)
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[c("data", "measure", "payment_amount")]
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[c("data", "measure", "payment_amount"),]
View(mydata)
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[c("data", "measure", "payment_amount"),]
View(mydata)
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[which(c("data", "measure", "payment_amount")),]
mydata<-mydata[which(c("data", "measure", "payment_amount"),)]
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[, c("data", "measure", "payment_amount")]
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[, c("data", "measure", "payment_amount"),]
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[c("data", "measure", "payment_amount")]
View(mydata)
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[c(mydata$date, mydata$measure, mydata$payment_amount)]
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[,c(mydata$date, mydata$measure, mydata$payment_amount)]
mydata<-mydata[c("date", "measure", "payment_amount")]
View(mydata)
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8")
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[c("date", "measure", "payment_amount")]
View(mydata)
runApp('subsidies/payments per measure')
runApp('subsidies/payments per measure')
runApp('subsidies/payments per measure')
library(shiny)
library(googleVis)
library(shinythemes)
library(ggplot2)
library(directlabels)
library(scales)
library(dplyr)
runApp('subsidies/payments per measure')
?cumsum
runApp('subsidies/payments per measure')
class(mydata$date)
?as.date
?as.Date
runApp('subsidies/payments per measure')
runApp('subsidies/payments per measure')
runApp('subsidies/payments per measure')
runApp('subsidies/payments per measure')
runApp('subsidies/payments per measure')
mydata_top_five<-aggregate(mydata$payment_amount, by=list(measure=mydata_top_five$measure), FUN=sum)
mydata_top_five<-mydata_top_five[order(-mydata_top_five$x),]
mydata_top_five<-mydata_top_five[1:5,]
runApp('subsidies/payments per measure')
mydata_top_five<-aggregate(mydata$payment_amount, by=list(measure=mydata$measure), FUN=sum)
mydata_top_five<-mydata_top_five[order(-mydata_top_five$x),]
mydata_top_five<-mydata_top_five[1:5,] # Keeping top five measures
View(mydata)
View(mydata_top_five)
runApp('subsidies/payments per measure')
runApp('subsidies/payments per measure')
data_date_temp<-aggregate(mydata$payment_amount, by=list(measure=mydata$measure), FUN=sum)
data_date_temp<-mydata_top_five[order(-mydata_top_five$x),]
data_date_temp<-data_date_temp[1:5,] # Keeping top five measures
mydata_top_five<-data_date_temp[which(mydata$measure %in% data_date_temp$measure),]
View(mydata_top_five)
View(data_date_temp)
View(mydata_top_five)
View(mydata_top_five)
shiny::runApp('country/workforce_agri_eu_country_percentage')
runApp('subsidies/payments_per_fund_timeline')
runApp('subsidies/payments per measure')
library(shiny)
library(googleVis)
library(shinythemes)
library(ggplot2)
library(directlabels)
library(scales)
library(dplyr)
library(lubridate)
mydata<-read.csv("C:\\Users\\Ilias Tsergoulas\\Dropbox\\Website\\shiny\\subsidies\\payments per measure\\payments.csv", sep=",", encoding="UTF-8", stringsAsFactors = FALSE)
mydata<-mydata[which(mydata$fund=='ΕΤΑ'), ] # Filtering data
mydata<-mydata[c("date", "measure", "payment_amount")]
mydata$date <- dmy(mydata$date) # Converting character to date
runApp('subsidies/payments per measure')
