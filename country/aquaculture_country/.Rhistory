library(shiny); print(source('~/Dropbox/Website/shiny/country/bio_production_country/bio_production_country.R')$value)
print(source('~/Dropbox/Website/shiny/country/aquaculture_country/aquaculture_country.R')$value)
print(source('~/Dropbox/Website/shiny/country/aquaculture_country/aquaculture_country.R')$value)
getwd()
setwd("/home/iliastsergoulas/Dropbox/Website/shiny/country/aquaculture_production")
setwd("~/Dropbox/Website/shiny")
print(source('country/aquaculture_country/aquaculture_country.R')$value)
print(source('country/aquaculture_country/aquaculture_country.R')$value)
print(source('country/wine_production_country/wine_production_country.R')$value)
?histogram
??histogram
?hist
?ave
?weekdays
?as.Date
install.packages("timedate")
install.packages("timeDate")
library(timeDate)
mydata<-read.csv("./activity.csv")
mydata_nona<-mydata[complete.cases(mydata),]
total_steps_per_day<-aggregate(mydata_nona$steps, by=list(Date=mydata_nona$date), FUN=sum)
hist(total_steps_per_day$x)
mymean<-mean(total_steps_per_day$x)
print(mymean)
mymedian<-median(total_steps_per_day$x)
print(mymedian)
average_steps_per_day<-aggregate(mydata_nona$steps,by=list(interval=as.numeric(as.character(mydata_nona$interval))), FUN=mean)
plot(average_steps_per_day, type = "l")
max_value<-average_steps_per_day[average_steps_per_day$x == max(average_steps_per_day$x), ]
print(max_value$interval)
nrows_nona<-sum(is.na(mydata))
print(nrows_nona)
mydata_imputed<-for (i in 1:nrow(mydata)) {
if (is.na(mydata$steps[i]))
{mydata$steps[i] <- average_steps_per_day[which(mydata$interval[i] == average_steps_per_day$interval), ]$x}}
total_steps_per_day_imputed<-aggregate(mydata_imputed$steps, by=list(Date=mydata_imputed$date), FUN=sum)
hist(total_steps_per_day_imputed$x)
mymean_imputed<-mean(total_steps_per_day_imputed$x)
print(mymean_imputed)
mymedian_imputed<-median(total_steps_per_day_imputed$x)
print(mymedian_imputed)
for (i in 1:nrow(mydata)) {
print(mydata$steps[i])}
for (i in 1:nrow(mydata)) {
if (is.na(mydata$steps[i]))
{print(mydata$steps[i])}}
for (i in 1:nrow(mydata)) {
if (is.na(mydata$steps[i]))
{print(mydata$steps[i])}}
View(mydata)
View(mydata)
library(timeDate)
mydata<-read.csv("./activity.csv")
mydata_nona<-mydata[complete.cases(mydata),]
View(mydata)
mydata_imputed<-for (i in 1:nrow(mydata)) {
if (is.na(mydata$steps[i]))
{mydata$steps[i] <- average_steps_per_day[which(mydata$interval[i] == average_steps_per_day$interval), ]$x}}
View(mydata)
mydata_imputed<-mydata
View(mydata_imputed)
library(timeDate)
mydata<-read.csv("./activity.csv")
mydata_nona<-mydata[complete.cases(mydata),]
View(mydata)
total_steps_per_day<-aggregate(mydata_nona$steps, by=list(Date=mydata_nona$date), FUN=sum)
hist(total_steps_per_day$x)
mymean<-mean(total_steps_per_day$x)
print(mymean)
mymedian<-median(total_steps_per_day$x)
print(mymedian)
View(mydata)
average_steps_per_day<-aggregate(mydata_nona$steps,by=list(interval=as.numeric(as.character(mydata_nona$interval))), FUN=mean)
plot(average_steps_per_day, type = "l")
max_value<-average_steps_per_day[average_steps_per_day$x == max(average_steps_per_day$x), ]
print(max_value$interval)
View(mydata)
nrows_nona<-sum(is.na(mydata))
print(nrows_nona)
mydata_imputed<-mydata
View(mydata)
View(mydata)
View(mydata_imputed)
View(mydata_imputed)
library(timeDate)
mydata<-read.csv("./activity.csv")
mydata_nona<-mydata[complete.cases(mydata),]
total_steps_per_day<-aggregate(mydata_nona$steps, by=list(Date=mydata_nona$date), FUN=sum)
hist(total_steps_per_day$x)
mymean<-mean(total_steps_per_day$x)
print(mymean)
mymedian<-median(total_steps_per_day$x)
print(mymedian)
average_steps_per_day<-aggregate(mydata_nona$steps,by=list(interval=as.numeric(as.character(mydata_nona$interval))), FUN=mean)
plot(average_steps_per_day, type = "l")
max_value<-average_steps_per_day[average_steps_per_day$x == max(average_steps_per_day$x), ]
print(max_value$interval)
nrows_nona<-sum(is.na(mydata))
print(nrows_nona)
mydata_imputed<-mydata_nona
View(mydata_imputed)
mydata_imputed<-for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
print("a")
#mydata_imputed$steps[i] <- average_steps_per_day[which(mydata_imputed$interval[i] ==average_steps_per_day$interval), ]$x}
}}
mydata_imputed<-mydata_nona
for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
print("a")
#mydata_imputed$steps[i] <- average_steps_per_day[which(mydata_imputed$interval[i] ==average_steps_per_day$interval), ]$x}
}}
mydata_imputed<-mydata
for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
print("a")
#mydata_imputed$steps[i] <- average_steps_per_day[which(mydata_imputed$interval[i] ==average_steps_per_day$interval), ]$x}
}}
mydata_imputed<-mydata
mydata_imputed<-for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
print("a")
#mydata_imputed$steps[i] <- average_steps_per_day[which(mydata_imputed$interval[i] ==average_steps_per_day$interval), ]$x}
}}
mydata_imputed<-mydata
mydata_imputed<-for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
mydata_imputed$steps[i] <- average_steps_per_day[which(mydata_imputed$interval[i] ==average_steps_per_day$interval), ]$x}
}}
View(mydata_imputed)
View(mydata_imputed)
mydata_imputed<-mydata
mydata_imputed<-for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
mydata_imputed$steps[i] <- average_steps_per_day[which(mydata_imputed$interval[i] ==average_steps_per_day$interval), ]$x}
}
mydata_imputed<-mydata
print(mydata_imputed$interval)
print(class(mydata_imputed$steps[i]))
print(class(average_steps_per_day[which(mydata_imputed$interval[i]))
print(class(average_steps_per_day[which(mydata_imputed$interval[i])
))
print(class(average_steps_per_day[which(mydata_imputed$interval[i])]))
print(class(mydata_imputed$interval[i]))
print(class(average_steps_per_day$interval))
mydata_imputed<-mydata
mydata_imputed<-for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
mydata_imputed$steps[i] <-
average_steps_per_day[which(as.numeric(as.character(mydata_imputed$interval[i])) ==average_steps_per_day$interval), ]$x}
}
print(class(mydata_imputed$interval[i]))
mydata_imputed<-mydata
mydata_imputed<-for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
mydata_imputed$steps[i] <- average_steps_per_day[which(mydata_imputed$interval[i] ==average_steps_per_day$interval), ]$x}
}
print(class(mydata_imputed$interval[i]))
mydata_imputed<-mydata
print(class(mydata_imputed$interval[i]))
print(class(average_steps_per_day$interval))
for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
print("a")}
}
for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
mydata_imputed$steps[i] <- 2}
}
View(mydata_imputed)
mydata_imputed<-mydata
for (i in 1:nrow(mydata_imputed)) {
if (is.na(mydata_imputed$steps[i])) {
mydata_imputed$steps[i] <- 2}
}
View(mydata_imputed)
mydata_imputed<-mydata
View(mydata_imputed)
View(mydata_imputed)
View(average_steps_per_day)
mydata_imputed<-mydata
View(mydata_imputed)
sum(is.na(mydata_imputed))
View(mydata_imputed)
View(mydata_imputed)
print(average_steps_per_day[which(mydata_imputed$interval[1] ==average_steps_per_day$interval), ]$x)
View(mydata_imputed)
View(average_steps_per_day)
mydata_imputed$steps[2] <- average_steps_per_day[which(mydata_imputed$interval[2] ==average_steps_per_day$interval), ]$x
View(mydata_imputed)
shiny::runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
>gvisColumnChart
?gvisColumnChart
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_production_country_8407')
getwd()
runApp('country/aquaculture_production_country_8407')
runApp('country/aquaculture_production_country_8407')
runApp('country/aquaculture_production_country_8407')
getwd()
runApp('country/aquaculture_production_country_8407')
aquaculture_production_country_8407 <- read.csv("~/Dropbox/Website/shiny/country/aquaculture_production_country_8407/aquaculture_production_country_8407.csv")
View(aquaculture_production_country_8407)
runApp('country/aquaculture_production_country_8407')
runApp('country/greenhouse_gas_country')
runApp('country/livestock_country')
runApp('country/wine_production_country')
runApp('country/workforce_agri_country_percentage')
runApp('country/aquaculture_production_country_8407')
runApp('country/aquaculture_production_country_8407')
runApp('country/aquaculture_production_country_8407')
runApp('country/aquaculture_production_country_8407')
install.packages("timeDate")
mydata<-read.csv("./activity.csv")
mydata_nona<-mydata[complete.cases(mydata),]
View(mydata)
print(mydata[mydata$interval=5])
print(mydata[mydata$interval==5])
?hist
shiny::runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
shiny::runApp('country/aquaculture_country')
install.packages(c("colorspace", "curl", "ggplot2", "Rcpp", "reshape2", "rsconnect", "scales", "shiny", "yaml"))
install.packages(c("colorspace", "curl", "ggplot2", "Rcpp", "reshape2",
install.packages("colorspace")
shiny::runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
library(shiny)
library(googleVis)
library(shinythemes)
install.packages("shiny")
shiny::runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
install.packages("installr")
install.packages("installr")
library(installr)
shiny::runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
shiny::runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
runApp('country/aquaculture_country')
