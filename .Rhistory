library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
mypoint<-data.frame("Selection", "23.861526", "38.096597")
View(mypoint)
?data.frame
source('~/Dropbox/distances.R')
all_cons <- dbListConnections(PostgreSQL())
for(con in all_cons)
dbDisconnect(con)
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
mypoint<-data.frame("Selection", "23.861526", "38.096597")
names(mypoint)<-c("type", "latitude", "longitude")
pointsofinterest<-rbind(mypoint, airports, ports, cities)
dbDisconnect(con)
dbUnloadDriver(drv)
View(pointsofinterest)
View(cities)
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
mypoint<-data.frame("23.861526", "38.096597", "Selection")
names(mypoint)<-c("latitude", "longitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities)
dbDisconnect(con)
dbUnloadDriver(drv)
View(pointsofinterest)
class(mypoint)
class(cities)
View(mypoint)
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
mypoint<-data.frame("23.861526", "38.096597", "Selection", stringsAsFactors = FALSE)
names(mypoint)<-c("latitude", "longitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities)
dbDisconnect(con)
dbUnloadDriver(drv)
View(pointsofinterest)
source('~/Dropbox/distances.R')
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
mypoint<-data.frame("23.861526", "38.096597", "Selection", stringsAsFactors = FALSE)
names(mypoint)<-c("latitude", "longitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities)
dbDisconnect(con)
dbUnloadDriver(drv)
distCom <- osrmTable(loc = wineries[1:20, c("name","longitude","latitude")])
print(distCom$duration[1,1:5])
print(distCom)
source('~/Dropbox/distances.R')
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
mypoint<-data.frame("23.861526", "38.096597", "Selection", stringsAsFactors = FALSE)
names(mypoint)<-c("latitude", "longitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities)
dbDisconnect(con)
dbUnloadDriver(drv)
distCom <- osrmTable(loc = pointsofinterest[1:20, c("latitude", "longitude", "type")])
print(distCom$duration[1,1:5])
source('~/Dropbox/distances.R')
?osrmTable
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
View(pointsofinterest)
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
mypoint<-data.frame("23.861526", "38.096597", "Selection", stringsAsFactors = FALSE)
names(mypoint)<-c("latitude", "longitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities)
dbDisconnect(con)
dbUnloadDriver(drv)
View(pointsofinterest)
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
mypoint<-data.frame("23.861526", "38.096597", "Selection", stringsAsFactors = FALSE)
names(mypoint)<-c("longitude", "latitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities)
dbDisconnect(con)
dbUnloadDriver(drv)
View(pointsofinterest)
source('~/Dropbox/distances.R')
for col in colnames(mypoint){}
for col in colnames(mypoint){
print(class(col))
}
for col in colnames(mypoint){
print(class(col))
}
for col in colnames(mypoint){
print(class(col))}
for col in colnames(mypoint){print(class(col))}
for (col in colnames(mypoint)){print(class(col))}
for (col in colnames(mypoint)){print(class(cities))}
for (col in colnames(mypoint)){print(class(ports))}
print(class(cities$latitude))
for (col in colnames(ports)){print(class(ports))}
for (col in colnames(ports)){print(class(col))}
View(pointsofinterest)
for (col in colnames(pointsofinterest)){print(class(col))}
class(pointsofinterest)
?dbGetQuery
library(RPostgreSQL)
?dbGetQuery
shiny::runApp('wordcloud/gr')
runApp('subsidies/gr')
# This R script is created as a Shiny application based on processed data from OPEKEPE's announcements
# about Agricultural Development, Fisheries, Direct Payments and Market Measures.
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(lubridate)
library(dplyr)
library(shinydashboard)
library(forecast)
library(dygraphs)
library(corrplot)
library(xts)
library(htmlwidgets)
library(RPostgreSQL)
valueFormatter<-"function formatValue(v) {
var suffixes = ['', 'χιλ', 'εκατ', 'δις', 'τρις'];
if (v < 1000) return v;
var magnitude = Math.ceil(String(Math.floor(v)).length / 3-1);
if (magnitude > suffixes.length - 1)
magnitude = suffixes.length - 1;
return String(Math.round(v / Math.pow(10, magnitude * 3), 2)) +suffixes[magnitude]}"
credentials<-read.csv("/home/iliastsergoulas/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = as.character(credentials$host), port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.payments") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date) # Converting character to date
lastdate=max(mydata$date)
View(mydata)
data_measure<-mydata[mydata$measure=='Μεταφορικά νησιών Αιγαίου', c("date", "payment_amount")]
data_measure<-mutate(data_measure, total=cumsum(payment_amount))
data_measure<-data_measure[c("date", "total")]
data_measure<-xts(data_measure, order.by=as.POSIXct(data_measure$date))
data_measure_predicted <- forecast(as.numeric(data_measure$Value), h=as.numeric(input$period))
data_measure_predicted <- data.frame(Date = seq(mdy('06/30/2017'), by = 'months', length.out = as.numeric(input$period)),
Forecast = data_measure_predicted$mean,Hi_95 = data_measure_predicted$upper[,2],
Lo_95 = data_measure_predicted$lower[,2])
data_measure_xts <- xts(data_measure_predicted, order.by = as.POSIXct(data_measure_predicted$Date))
data_measure_predicted <- merge(data_measure, data_measure_xts)
data_measure <- data_measure_predicted[,c("Value", "Forecast", "Hi_95", "Lo_95")]
data_measure
View(data_measure)
dygraph(data_measure$total, main=paste0("Πορεία απορρόφησης: ", input$measure))%>%
dyAxis("y", label = "Πληρωμές", axisLabelFormatter=JS(valueFormatter))%>%
dyRangeSelector(height = 20)
dygraph(data_measure$total, main=paste0("Πορεία απορρόφησης: ", 'Μεταφορικά νησιών Αιγαίου'))%>%
dyAxis("y", label = "Πληρωμές", axisLabelFormatter=JS(valueFormatter))%>%
dyRangeSelector(height = 20)
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
all_cons <- dbListConnections(PostgreSQL())
for(con in all_cons)
dbDisconnect(con)
source('~/Dropbox/distances.R')
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
railway <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.railway")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
railway$type<-"Railway station"
mypoint<-data.frame("23.861526", "38.096597", "Selection", stringsAsFactors = FALSE)
names(mypoint)<-c("longitude", "latitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities, railway)
dbDisconnect(con)
dbUnloadDriver(drv)
distCom <- osrmTable(loc = pointsofinterest[1:20, c("type","longitude","latitude")])
print(distCom$duration[1,1:5])
View(pointsofinterest)
source('~/Dropbox/distances.R')
View(pointsofinterest)
source('~/Dropbox/distances.R')
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
railway <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.railway")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
railway$type<-"Railway station"
mypoint<-data.frame("23.861526", "38.096597", "Selection", stringsAsFactors = FALSE)
names(mypoint)<-c("longitude", "latitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities, railway)
dbDisconnect(con)
dbUnloadDriver(drv)
distCom <- osrmTable(loc = pointsofinterest[1:20, c("longitude", "latitude", "type")])
print(distCom$duration[1,1:5])
View(pointsofinterest)
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
source('~/Dropbox/distances.R')
View(pointsofinterest)
# Data: .........................
# This R script is created as a Shiny application to ............
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
library(postGIStools)
library(osrm)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
wineries <- get_postgis_query(con, "SELECT name, latitude, longitude FROM agriculture.wineries")
airports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.airports")
ports <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.ports")
cities <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.cities")
railway <- get_postgis_query(con, "SELECT latitude, longitude FROM geodata.railway")
wineries$type<-"Winery"
airports$type<-"Airport"
ports$type<-"Port"
cities$type<-"City"
railway$type<-"Railway station"
mypoint<-data.frame("23.861526", "38.096597", "Selection", stringsAsFactors = FALSE)
names(mypoint)<-c("longitude", "latitude", "type")
pointsofinterest<-rbind(mypoint, airports, ports, cities, railway)
dbDisconnect(con)
dbUnloadDriver(drv)
pointsofinterest$longitude<-as.numeric(pointsofinterest$longitude)
pointsofinterest$latitude<-as.numeric(pointsofinterest$latitude)
distCom <- osrmTable(loc = pointsofinterest[1:20, c("type","longitude","latitude")])
source('~/Dropbox/distances.R')
