prefectures<-readShapePoly("/home/iliastsergoulas/Dropbox/Website/shapefiles/prefectures/prefectures.shp")
# Creating lists of administrative units with respective area
region_area<-unique(regions_Corine_2012[with(regions_Corine_2012, order(region_eng)), ]$region_are)
prefecture_area<-unique(prefectures_Corine_2012[with(prefectures_Corine_2012, order(pref_eng)), ]$pref_area)
# Reading image for plots' background
img <- readPNG("~/Dropbox/Website/agristats_reports/agricultural_land/R/farm.png")
g <- rasterGrob(img, interpolate=TRUE)
m <- merge(regions, regions_Corine_2012, by='region_eng')
m <- sp::merge(regions, regions_Corine_2012, by='region_eng')
class(regions)
class(regions_Corine_2012)
library(raster)
regions <- shapefile("/home/iliastsergoulas/Dropbox/Website/shapefiles/regions/regions.shp")
m <- sp::merge(regions, regions_Corine_2012, by='region_eng')
View(regions)
View(regions_Corine_2012)
greece_region_2012<-aggregate(as.numeric(regions_Corine_2012$agri_area),
by=list(Region=regions_Corine_2012$region_eng), FUN=sum)
greece_region_2012$pct_on_region<-percent((greece_region_2012$x/region_area))
m <- sp::merge(regions, greece_region_2012, by='region_eng')
View(greece_region_2012)
m <- sp::merge(regions, greece_region_2012, by.x="region_eng",by.y="Region")
plot(m)
ggplot() + geom_map(data = m, aes(map_id = edu63, fill = pct_on region),
map = region_eng))
ggplot() + geom_map(data = m, aes(map_id = edu63, fill = pct_on region),
map = region_eng))
ggplot() + geom_map(data = m, aes(map_id = edu63, fill = pct_on region),
map = region_eng)
ggplot() + geom_map(data = m, aes(map_id = edu63, fill = pct_on region),
map = region_eng)
ggplot() + geom_map(data = m, aes(map_id = edu63, fill = pct_on_region),
map = region_eng)
ggplot() + geom_map(data = m, aes(map_id = edu63, fill = pct_on_region),
map = regions)
ggplot() + geom_map(data = m, aes(map_id = edu63, fill = pct_on_region))
class(m)
?geom_map
ggplot() + geom_map(data = m, aes(map_id = edu63, fill = pct_on_region),
map = regions)
ggplot() + geom_map(data = regions, aes(map_id = edu63, fill = pct_on_region),
map = regions)
ggplot() + geom_map(data = regions, aes(fill = pct_on_region),
map = regions)
ggplot() + geom_map(data = m, aes(fill = pct_on_region),
map = regions)
ggplot() + geom_map(data = m, aes(fill = pct_on_region),
map = m)
View(m)
ggplot() + geom_map(data = greece_region_2012, aes(fill = pct_on_region),
map = regions)
ggplot() + geom_map(data = greece_region_2012, aes(map_id=region_eng, fill = pct_on_region),
map = regions)
test<-ggplot() + geom_map(data = greece_region_2012, aes(map_id=region_eng, fill = pct_on_region),
map = regions)
test<-ggplot() + geom_map(data = greece_region_2012, aes(inherit.aes = FALSE, map_id=region_eng, fill = pct_on_region),
map = regions)
source('~/Desktop/test.R')
ggplot( m, aes( long , lat ) )+
geom_polygon( aes( fill = m ) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m, aes( long , lat ) )+
geom_polygon( aes( fill = m ) , colour = "black" )+
coord_equal()
ggplot( m, aes( long , lat ) )+
geom_polygon( aes( fill = m ) , colour = "black" )+
scale_fill_gradientn( )+
coord_equal()
install.packages("RColorBrewer")
library(RColorBrewer)
ggplot( m, aes( long , lat ) )+
geom_polygon( aes( fill = m ) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
View(m)
ggplot( m, aes( long , lat ) )+
geom_polygon( aes( fill = pct_on_region) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m, aes( long , lat ) )+
geom_polygon( aes( fill = m$pct_on_region) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m )+
geom_polygon( aes( fill = m$pct_on_region) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m )+
geom_polygon( aes( fill = pct_on_region) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m )+
geom_polygon( aes( fill = m$pct_on_region) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
m.f <- fortify(m, region = "region_id")
View(m.f)
ggplot( m.f, aes( long , lat ) )+
geom_polygon( aes( fill = m$pct_on_region) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m.f, aes( long , lat ) )+
geom_polygon( aes( ) , colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m.f, aes( long , lat ) )+
geom_polygon( colour = "black" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m.f, aes( long , lat ) )+
geom_polygon( colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( m.f, aes( lat , long ) )+
geom_polygon( colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
View(m.f)
regions.f <- fortify(regions, region = "region_id")
ggplot( regions.f, aes( lat , long ) )+
geom_polygon( colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( regions.f, aes( long , lat ) )+
geom_polygon( colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( regions.f, aes( long , lat ) )+
geom_polygon( colour = "green" )+
scale_fill_gradient( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( regions.f, aes( long , lat ) )+
geom_polygon( colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( regions.f, aes( long , lat ) )+
geom_polygon( colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )
ggplot()+
geom_polygon(data=m.f,aes(x = long, y = lat, fill = pct_on_region) colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot()+
geom_polygon(data=m.f,aes(x = long, y = lat, fill = pct_on_region), colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
View(m.f)
ggplot()+
geom_polygon(data=m,aes(x = long, y = lat, fill = pct_on_region), colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot()+
geom_polygon(data=m,aes(x = long, y = lat, fill = m$pct_on_region), colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
View(m.f)
ggplot()+
geom_polygon(data=m,aes(fill = m$pct_on_region), colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
?geom_polygons
?geom_polygon
ggplot()+
geom_polygon(data=m,aes(fill = m$pct_on_region, group=region_id), colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot()+
geom_polygon(data=m,aes(fill = m$pct_on_region, group=id), colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot()+
geom_polygon(data=m,aes(group=id), colour = "green" )+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )+
coord_equal()
ggplot( regions.f, aes( long , lat ) )+
geom_polygon(x = long, y = lat, group = id)+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )
ggplot( regions.f)+
geom_polygon(x = long, y = lat, group = id)+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )
ggplot( regions.f, aes( long , lat ) )+
geom_polygon(group = id)+
scale_fill_gradientn( colours = brewer.pal( 9 , "Reds" ) )
View(regions.f)
ggplot(regions.f, aes(long,lat)) +
geom_polygon(group = id) +
scale_fill_gradientn(colours = brewer.pal(9 , "Reds"))
ggplot(m.f, aes(long,lat)) +
geom_polygon(group = id) +
scale_fill_gradientn(colours = brewer.pal(9 , "Reds"))
library(rgeos)
ggplot(m.f, aes(long,lat)) +
geom_polygon(group = id) +
scale_fill_gradientn(colours = brewer.pal(9 , "Reds"))
ggplot(m, aes(long,lat)) +
geom_polygon(group = id) +
scale_fill_gradientn(colours = brewer.pal(9 , "Reds"))
ggplot(m, aes(long,lat)) +
geom_polygon(group = region_id) +
scale_fill_gradientn(colours = brewer.pal(9 , "Reds"))
ggplot(m) +
geom_polygon(group = region_id) +
scale_fill_gradientn(colours = brewer.pal(9 , "Reds"))
ggplot(m, aes(x = long, y = lat, group = group, fill = pct_on_region)) +
geom_polygon() +
coord_equal()
ggplot(m, aes(x = long, y = lat, group = group, fill = m$pct_on_region)) +
geom_polygon() +
coord_equal()
ggplot(m.f, aes(x = long, y = lat, group = group)) +
geom_polygon() +
coord_equal()
ggplot(regions, aes(x = long, y = lat, group = group)) +
geom_polygon() +
coord_equal()
View(regions.f)
ggplot(regions, aes(x = long, y = lat, group = group)) +
geom_polygon(fill=pct_on_region) +
coord_equal()
ggplot(regions, aes(x = long, y = lat, group = group, fill=pct_on_region)) +
geom_polygon() +
coord_equal()
ggplot(regions, aes(x = long, y = lat, group = group)) +
geom_polygon(color = "grey10", size = 0.2) +
coord_equal()
ggplot(regions, aes(x = long, y = lat, fill=region_are, group = group)) +
geom_polygon(color = "grey10", size = 0.2) +
coord_equal()
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=population.natural)) +
coord_equal()
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_are)) +
coord_equal()
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_area)) +
coord_equal()
ggplot(regions, aes(x = long, y = lat, group = group)) +
geom_polygon() +
coord_equal()
ggplot(m.f, aes(long, lat, group = group)) +
geom_polygon() +
coord_equal()
View(m.f)
ggplot(m.f, aes(long, lat, group = group)) +
geom_polygon() +
coord_equal() + labs(x = "Easting (m)", y = "Northing (m)",
fill = "% Sports\nParticipation") +
ggtitle("London Sports Participation")
Greek Regions
ggplot(m.f, aes(long, lat, group = group)) +
geom_polygon() +
coord_equal() + labs() +
ggtitle("Greek Regions")
ggplot(m.f, aes(long, lat, group = group)) +
geom_polygon() +
coord_equal() +
ggtitle("Greek Regions")
library(leaflet)
leaflet(data = m) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(gdp08),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
pal <- colorQuantile("YlGn", NULL, n = 5)
leaflet(data = m) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(gdp08),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
leaflet(data = m) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
leaflet(data = regions) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
leaflet(data = greece_region_2012) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
leaflet(data = m) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
?addProviderTiles
leaflet(data = m) %>%
addProviderTiles("Stamen.Watercolor") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
leaflet(data = regions) %>%
addProviderTiles("Stamen.Watercolor") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
?readShapePoly
regions<-readShapePoly("/home/iliastsergoulas/Dropbox/Website/shapefiles/regions/regions.shp", proj4string=CRS(as.character(4326)))
regions<-readShapePoly("/home/iliastsergoulas/Dropbox/Website/shapefiles/regions/regions.shp", proj4string=CRS(as.character(EPSG:4326)))
regions<-readShapePoly("/home/iliastsergoulas/Dropbox/Website/shapefiles/regions/regions.shp", proj4string=CRS(as.character(WGS 84)))
regions<-readShapePoly("/home/iliastsergoulas/Dropbox/Website/shapefiles/regions/regions.shp", proj4string=CRS(as.character("WGS 84")))
regions<-readShapePoly("/home/iliastsergoulas/Dropbox/Website/shapefiles/regions/regions.shp")
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1, popup=region_eng)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1, popup=region_gr)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1, popup=region_id)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1, popup=region$region_id)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1, popup=regions$region_id)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1, popup=regions$region_are)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1, popup=regions$region_area)
leaflet(data = regions) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addPolygons(fillColor = ~pal(region_are),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1, popup=regions$region_pop)
ggplot(m)
ggplot(regions)
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_are))
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group))
gplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group)) +
geom_path(aes(x=long, y=lat, group=group), colour="black")
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group)) +
geom_path(aes(x=long, y=lat, group=group), color="black")
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black")
Regions defined for each Polygons
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black")
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_id)) +
geom_path(aes(x=long, y=lat, group=group), color="black")
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_id)) +
geom_path(aes(x=long, y=lat, group=group), color="black")
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_id)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
Value
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=Value)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
View(regions)
ggplot(regions) +
geom_polygon(aes(x=long, y=lat, group=group, fill=region_are)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string(x=long, y=lat, group=group, fill=region_are)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string(x=long, y=lat, fill=region_are)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
View(regions.f)
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string(x=long, y=lat, fill=region_are)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string(x=long, y=lat, fill=region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string(fill=region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string()) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string(x=long, y=lat, group=group, fill=region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string(x=long, y=lat)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(inherit.aes=FALSE, aes_string(x=long, y=lat, group=group, fill=region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(inherit.aes=FALSE, aes_string(x=long, y=lat, fill=region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes_string(inherit.aes=FALSE, x=long, y=lat)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, group=group)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=group)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=group, fill=region_are)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=group, fill=region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=group, fill="green")) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=group, fill="red")) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=group, fill=regions$region_are)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=group, fill=regions$region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=group, fill = factor(group))) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
View(regions.f)
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=piece, fill = factor(group))) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions) +
geom_polygon(aes(inherit.aes=FALSE, x=long, y=lat, group=id, fill = factor(id))) +
geom_path(aes(x=long, y=lat, group=group), color="black") + coord_equal()
ggplot(regions, x=long, y=lat, group=id) +
geom_polygon(aes(inherit.aes=FALSE, fill = region_are)) +
geom_path(aes(x=long, y=lat, group=group), color="black") +coord_equal()
ggplot(regions, x=long, y=lat, group=id) +
geom_polygon(aes(inherit.aes=FALSE, fill = region_area)) +
geom_path(aes(x=long, y=lat, group=group), color="black") +coord_equal()
ggplot(regions, x=long, y=lat, group=id) +
geom_polygon(aes(inherit.aes=FALSE, fill = factor(id))) +
geom_path(aes(x=long, y=lat, group=group), color="black") +coord_equal()
ggplot(regions, x=long, y=lat, group=id) +
geom_polygon(fill = factor(id)) +
geom_path(aes(x=long, y=lat, group=group), color="black") +coord_equal()
ggplot(regions, x=long, y=lat, group=id) +
geom_polygon(fill = factor(region_id)) +
geom_path(aes(x=long, y=lat, group=group), color="black") +coord_equal()
ggplot(regions, x=long, y=lat, group=id) +
geom_polygon(fill = factor(regions$region_id)) +
geom_path(aes(x=long, y=lat, group=group), color="black") +coord_equal()
shiny::runApp('country/en/cooperatives')
runApp('country/en/cooperatives')
runApp('country/en/greenhouse_gas_eu_country')
runApp('country/en/total_agri_exports_wb_country')
runApp('country/en/total_agri_imports_wb_country')
runApp('country/en/workforce_agri_eu_country')
runApp('country/en/greenhouse_gas_eu_country')
runApp('sector/wineries')
