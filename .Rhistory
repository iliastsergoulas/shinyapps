# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "agristats",
host = "88.99.13.199", port = 5432,
user = "iliastsergoulas", password = "Std74650!")
rm(pw) # removes the password
# check for the cartable
dbExistsTable(con, "agriculture.eggs")
library(RPostgreSQL# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "agristats",
host = "88.99.13.199", port = 5432,
user = "iliastsergoulas", password = "Std74650!")
rm(pw) # removes the password
# check for the cartable
dbExistsTable(con, "agriculture.eggs")
library(RPostgreSQL)
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "agristats",
host = "88.99.13.199", port = 5432,
user = "iliastsergoulas", password = "Std74650!")
rm(pw) # removes the password
# check for the cartable
dbExistsTable(con, "agriculture.eggs")
library(RPostgreSQL)
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "agristats",
host = "88.99.13.199", port = 5432,
user = "iliastsergoulas", password = "Std74650!")
# check for the cartable
dbExistsTable(con, "agriculture.eggs")
library(RPostgreSQL)
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "agristats",
host = "88.99.13.199", port = 5432,
user = "iliastsergoulas", password = "Std74650!")
# check for the cartable
df_postgres <- dbGetQuery(con, "SELECT * from agriculture.eggs")
library(RPostgreSQL)
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "agristats",
host = "88.99.13.199", port = 5432,
user = "iliastsergoulas", password = "Std74650!")
# check for the cartable
df_postgres <- dbGetQuery(con, "SELECT * from agriculture.payments")
View(df_postgres)
shiny::runApp('country/agri_added_value_wb_country')
mydata<-WDI(country = "all", indicator = "NV.AGR.TOTL.KD", extra = FALSE, cache = NULL) # Downloading raw data from World Bank
View(mydata)
runApp('country/greenhouse_gas_eu_country')
runApp('country/agri_added_value_wb_country')
runApp('country/agri_added_value_wb_country')
runApp('country/agri_child_employment_wb_country')
runApp('country/agri_added_value_wb_country')
library(shiny)
library(googleVis)
library(shinythemes)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
printMoney <- function(x){ # A function to show number as currency
format(x, digits=10, nsmall=2, decimal.mark=",", big.mark=".")
}
specify_decimal <- function(x, k) format(round(x, k), nsmall=k, decimal.mark=",", big.mark=".") # A function to show number with k decimal places
credentials<-read.csv("/home/ilastsergoulas/DBcredentials.csv")
runApp('country/agri_added_value_wb_country')
library(shiny)
library(googleVis)
library(shinythemes)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
printMoney <- function(x){ # A function to show number as currency
format(x, digits=10, nsmall=2, decimal.mark=",", big.mark=".")
}
specify_decimal <- function(x, k) format(round(x, k), nsmall=k, decimal.mark=",", big.mark=".") # A function to show number with k decimal places
credentials<-read.csv("/home/iliastsergoulas/DBcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = as.character(credentials$host), port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agri_added_value_wb_country") # Get data
runApp('country/agri_added_value_wb_country')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
View(mydata)
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/goats_classes_elstat/goats_classes.csv")
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/goats_classes_elstat/goats_classes.csv",
encoding='UTF-8')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = "88.99.13.199", port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
source('~/Dropbox/Website/dbimporter.R')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/goats_classes_elstat/goats_classes.csv",
encoding='ISO-8859-7')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
all_cons <- dbListConnections(MySQL())
for (con in cons)
dbDisconnect(con)
dbListConnections(MySQL())
list()
all_cons <- dbListConnections(RPostgreSQL())
for (con in cons)
dbDisconnect(con)
dbListConnections(MySQL())
list()
all_cons <- dbListConnections(RPostgreSQL())
for (con in cons)
dbDisconnect(con)
dbListConnections(RPostgreQL())
list()
all_cons <- dbListConnections(RPostgreSQL())
for (con in cons)
dbDisconnect(con)
dbListConnections(RPostgreSQL())
list()
all_cons <- dbListConnections(RPostgreSQL())
for (con in cons)
dbDisconnect(con)
all_cons <- dbListConnections(PostgreSQL())
for (con in cons)
dbDisconnect(con)
dbListConnections(PostgreSQL())
list()
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
all_cons <- dbListConnections(PostgreSQL())
print(all_cons)
for(con in all_cons)
+  dbDisconnect(con)
print(paste(length(all_cons), " connections killed."))
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/goats_classes_elstat/goats_classes.csv",
encoding='UTF-8')
View(mydata)
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/goats_classes_elstat/goats_classes.csv",
encoding='Windows-1253')
View(mydata)
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/goats_classes_elstat/goats_classes.csv",
encoding='ISO-8859-7')
View(mydata)
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/goats_classes_elstat/goats_classes.csv",
encoding='UTF-8')
View(mydata)
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
runApp('sector/goats_elstat')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep_classes.csv",
encoding='UTF-8')
View(mydata)
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep_classes.csv",
encoding='UTF-8')
source('~/Dropbox/Website/dbimporter.R')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep_classes.csv")
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep_classes.csv")
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep_classes.csv". encoding='UTF-8')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep_classes.csv", encoding='UTF-8')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep_classes.csv", encoding='iso-8859--')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep_classes.csv", encoding='iso-8859-3')
View(mydata)
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_classes_elstat/sheep.csv")
View(mydata)
source('~/Dropbox/Website/dbimporter.R')
all_cons <- dbListConnections(PostgreSQL())
print(all_cons)
for(con in all_cons)
+  dbDisconnect(con)
print(paste(length(all_cons), " connections killed."))
source('~/Dropbox/Website/dbimporter.R')
runApp('sector/en/sheep_classes_elstat')
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_elstat/sheep.csv")
mydata <- read.csv("/home/iliastsergoulas/Dropbox/Website/shiny/sector/sheep_elstat/sheep.csv")
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
all_cons <- dbListConnections(PostgreSQL())
print(all_cons)
for(con in all_cons)
+  dbDisconnect(con)
print(paste(length(all_cons), " connections killed."))
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
runApp('subsidies/gr')
all_cons <- dbListConnections(PostgreSQL())
print(all_cons)
for(con in all_cons)
+  dbDisconnect(con)
print(paste(length(all_cons), " connections killed."))
runApp('subsidies/gr')
library(shiny)
library(shinythemes)
library(lubridate)
library(dplyr)
library(shinydashboard)
library(forecast)
library(dygraphs)
library(corrplot)
library(xts)
library(htmlwidgets)
library(RPostgreSQL)
valueFormatter<-"function formatValue(v) {
var suffixes = ['', 'χιλ', 'εκατ', 'δις', 'τρις'];
if (v < 1000) return v;
var magnitude = Math.ceil(String(Math.floor(v)).length / 3-1);
if (magnitude > suffixes.length - 1)
magnitude = suffixes.length - 1;
return String(Math.round(v / Math.pow(10, magnitude * 3), 2)) +suffixes[magnitude]}"
credentials<-read.csv("/home/iliastsergoulas/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = as.character(credentials$host), port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.payments") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date) # Converting character to date
View(mydata)
runApp('sector/aromatic_plants')
runApp('sector/aromatic_plants')
runApp('sector/aromatic_plants')
ibrary(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = as.character(credentials$host), port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
strSQL = "SELECT ST_AsText(geom) AS wkt_geometry, * FROM agriculture.aromatic"
dfQuery = dbGetQuery(con, strSQL)
dfQuery$geom <- NULL
runApp('sector/aromatic_plants')
library(shiny)
library(shinythemes)
library(leaflet)
library(rgdal)
library(maptools)
library(htmltools)
library(ggplot2)
library(directlabels)
library(scales)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = as.character(credentials$host), port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
strSQL = "SELECT ST_AsText(geom) AS wkt_geometry, * FROM agriculture.aromatic"
dfQuery = dbGetQuery(con, strSQL)
dfQuery$geom <- NULL
row.names(dfQuery) = dfQuery$gid
rWKT <- function (var1 , var2) {return (readWKT(var1, var2) @polygons)}
spL <- mapply(rWKT, dfQuery$wkt_geometry, dfQuery$gid)
spTemp <- SpatialPolygons(spL)
plants <- SpatialPolygonsDataFrame(spTemp, dfQuery[-1])
plants_list <- as.data.frame(plants)
plants_list <- plants_list[c("business_n", "type", "website")]
names(plants_list)<-c("Επωνυμία", "Κατηγορία", "Ιστότοπος")
