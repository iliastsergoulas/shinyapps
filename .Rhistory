"αυτήν","μέσω","χώρου","κυρίως", "μεταξύ","αυτοί","δηλαδή", "ξέρουν","άλλη","σχετικά","οποίες","τρόπο",
"πρώτα","όλη","τώρα","τόνισε","πολύ","οποίο","γιατί","μπορούν","περιοχές","δύο","μιλάμε","κάποιες",
"τόσο","σήμερα","λέω","πληρώσει","ώρα","εδώ","yoleni","μέρα","άλλες","πάρει","εεδ","γιάννης","θέματα",
"γίνεται","άρα","νέας","όλους","ποια","πρώτο","άλλα","θέλω","υπουργέ","συριζα", "θέλω","θέλει","υπάρξει",
"περίοδο","χρόνο",
stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
m <- as.matrix(myDtm) # Converting to matrix
v <- sort(rowSums(m), decreasing=TRUE) # Calculating frequency of words
myNames <- names(v) # Getting words
d <- data.frame(word=myNames, freq=v) # Creating dataframe with each word and its frequency
wordcloud(d$word, d$freq, min.freq=20, max.words=100, scale=c(3,.5),
rot.per=.5,colors=brewer.pal(8, "Dark2"))
source('~/Dropbox/Website/agristats_applications/text_analyzer/textanalyzer.R')
source('~/Dropbox/Website/agristats_applications/text_analyzer/textanalyzer.R')
source('~/Dropbox/Website/agristats_applications/text_analyzer/app.R')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
source('~/Dropbox/Website/agristats_applications/text_analyzer/app.R')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
source('~/Dropbox/Website/agristats_applications/text_analyzer/app.R')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
source('~/Dropbox/Website/agristats_applications/text_analyzer/app.R')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
source('~/Dropbox/Website/agristats_applications/text_analyzer/app.R')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
source('~/Dropbox/Website/agristats_applications/text_analyzer/app.R')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
install.packages("rvest")
source('~/Dropbox/Website/agristats_applications/text_analyzer/scraper.R')
shiny::runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
runApp('subsidies/gr')
runApp('subsidies/gr')
# This R script is created as a Shiny application based on processed data from OPEKEPE's announcements
# about Agricultural Development, Fisheries, Direct Payments and Market Measures.
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(lubridate)
library(dplyr)
library(shinydashboard)
library(forecast)
library(dygraphs)
library(corrplot)
library(xts)
library(htmlwidgets)
library(RPostgreSQL)
valueFormatter<-"function formatValue(v) {
var suffixes = ['', 'χιλ', 'εκατ', 'δις', 'τρις'];
if (v < 1000) return v;
var magnitude = Math.ceil(String(Math.floor(v)).length / 3-1);
if (magnitude > suffixes.length - 1)
magnitude = suffixes.length - 1;
return String(Math.round(v / Math.pow(10, magnitude * 3), 2)) +suffixes[magnitude]}"
credentials<-read.csv("/home/iliastsergoulas/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = as.character(credentials$host), port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.payments") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date) # Converting character to date
mydata<-mydata[order(mydata$date),]
lastdate=max(mydata$date)
header <- dashboardHeader(title = paste0("Πορεία Προγραμμάτων Επιδότησης (τελευταία ημερομηνία ενημέρωσης ",lastdate, ")"),
titleWidth=1000) # Header of dashboard
sidebar <- dashboardSidebar(sidebarMenu(
selectInput('fund', 'Ταμείο', choices = unique(mydata$fund)),
uiOutput("slider_category"),
uiOutput("slider_measure")),
selectInput('period', 'Ορίζοντας πρόβλεψης (μήνες)', choices = c("6", "12", "18", "24", "30", "36"), selected='12'),
tags$footer(tags$p("Η παρούσα εφαρμογή βασίζεται σε επεξεργασμένα δεδομένα από Δελτία Τύπου του ΟΠΕΚΕΠΕ.
Το agristats.eu δε φέρει καμία ευθύνη για την ποιότητα των δεδομένων.")))
frow1 <- fluidRow( # Creating row of two diagrams
title = "Συνολικά",
status="success",
collapsible = TRUE,
theme = shinytheme("spacelab"),
mainPanel(
dygraphOutput("view_total"),width='98%')
)
frow2 <- fluidRow( # Creating row of two diagrams
title = "Συνολικά",
status="success",
collapsible = TRUE,
theme = shinytheme("spacelab"),
mainPanel(
dygraphOutput("view"),width='98%')
)
frow3 <- fluidRow(# Creating row of diagram and summary
box(
title = "Σύνοψη δεδομένων ανά Μέτρο",
status="success",
collapsible = TRUE,
theme = shinytheme("spacelab"),
mainPanel(
dataTableOutput("summary"),width=550)),
box(
title = "Λήψη δεδομένων",
status="success",
collapsed = TRUE,
theme = shinytheme("spacelab"),
mainPanel(downloadButton("downloadData")))
)
body <- dashboardBody(frow1, frow2, frow3) # Binding rows to body of dashboard
ui <- dashboardPage(header, sidebar, body, skin="green") # Binding elements of dashboard
View(mydata)
data_measure<-mydata[mydata$measure=='Μεταφορικά νησιών Αιγαίου', c("date", "payment_amount")]
data_measure<-mutate(data_measure, total=cumsum(payment_amount))
data_measure<-data_measure[c("date", "total")]
data_measure<-xts(data_measure, order.by=as.POSIXct(data_measure$date))
data_measure_predicted <- forecast(as.numeric(data_measure$Value), h=as.numeric(input$period))
data_measure_predicted <- data.frame(Date = seq(mdy('06/30/2017'), by = 'months', length.out = as.numeric(input$period)),
Forecast = data_measure_predicted$mean,Hi_95 = data_measure_predicted$upper[,2],
Lo_95 = data_measure_predicted$lower[,2])
data_measure_xts <- xts(data_measure_predicted, order.by = as.POSIXct(data_measure_predicted$Date))
data_measure_predicted <- merge(data_measure, data_measure_xts)
data_measure <- data_measure_predicted[,c("Value", "Forecast", "Hi_95", "Lo_95")]
data_measure
View(data_measure)
View(data_measure)
View(mydata)
data_total<-mydata[mydata$category=='Μέτρα Αγοράς', c("date", "payment_amount")]
data_total<-mutate(data_total, total=cumsum(payment_amount))
data_total<-data_total[c("date", "total")]
data_total<-xts(data_total, order.by=as.POSIXct(data_total$date))
data_total
View(data_total)
dygraph(data_measure$total, main=paste0("Πορεία απορρόφησης: ", input$measure))%>%
dyAxis("y", label = "Πληρωμές", axisLabelFormatter=JS(valueFormatter))%>%
dyRangeSelector(height = 20)
dygraph(data_measure$total, main=paste0("Πορεία απορρόφησης: ", 'input$measure'))%>%
dyAxis("y", label = "Πληρωμές", axisLabelFormatter=JS(valueFormatter))%>%
dyRangeSelector(height = 20)
runApp('subsidies/gr')
View(data_measure)
runApp('subsidies/gr')
runApp('subsidies/gr')
class(data_measure$total)
class(data_total$total)
runApp('subsidies/gr')
runApp('subsidies/gr')
data_measure<-mydata[mydata$measure=='Μεταφορικά νησιών Αιγαίου', c("date", "payment_amount")]
data_measure<-mutate(data_measure, total=cumsum(payment_amount))
data_measure<-data_measure[c("date", "total")]
data_measure<-xts(data_measure, order.by=as.POSIXct(data_measure$date))
data_measure_predicted <- forecast(as.numeric(data_measure$Value), h=as.numeric(input$period))
data_measure_predicted <- data.frame(Date = seq(mdy('06/30/2017'), by = 'months', length.out = as.numeric(input$period)),
Forecast = data_measure_predicted$mean,Hi_95 = data_measure_predicted$upper[,2],
Lo_95 = data_measure_predicted$lower[,2])
data_measure_xts <- xts(data_measure_predicted, order.by = as.POSIXct(data_measure_predicted$Date))
data_measure_predicted <- merge(data_measure, data_measure_xts)
data_measure <- data_measure_predicted[,c("Value", "Forecast", "Hi_95", "Lo_95")]
data_measure
runApp('subsidies/gr')
runApp('subsidies/gr')
print(input$period)
print(class(input$period))
data_measure<-mydata[mydata$measure=='Μεταφορικά νησιών Αιγαίου', c("date", "payment_amount")]
data_measure<-mutate(data_measure, total=cumsum(payment_amount))
data_measure<-data_measure[c("date", "total")]
data_measure<-xts(data_measure, order.by=as.POSIXct(data_measure$date))
data_measure_predicted <- forecast(as.numeric(data_measure$Value), h=as.numeric(input$period))
data_measure<-mydata[mydata$measure=='Μεταφορικά νησιών Αιγαίου', c("date", "payment_amount")]
data_measure<-mutate(data_measure, total=cumsum(payment_amount))
data_measure<-data_measure[c("date", "total")]
data_measure<-xts(data_measure, order.by=as.POSIXct(data_measure$date))
data_measure_predicted <- forecast(as.numeric(data_measure$Value), h=12)
data_measure_predicted <- data.frame(Date = seq(mdy('06/30/2017'), by = 'months', length.out = 12),
Forecast = data_measure_predicted$mean,Hi_95 = data_measure_predicted$upper[,2],
Lo_95 = data_measure_predicted$lower[,2])
data_measure_xts <- xts(data_measure_predicted, order.by = as.POSIXct(data_measure_predicted$Date))
data_measure_predicted <- merge(data_measure, data_measure_xts)
data_measure <- data_measure_predicted[,c("Value", "Forecast", "Hi_95", "Lo_95")]
data_measure
View(data_measure_predicted)
data_measure<-mydata[mydata$measure=='Μεταφορικά νησιών Αιγαίου', c("date", "payment_amount")]
data_measure<-mutate(data_measure, total=cumsum(payment_amount))
data_measure<-data_measure[c("date", "total")]
data_measure<-xts(data_measure, order.by=as.POSIXct(data_measure$date))
View(data_measure)
data_measure_predicted <- forecast(as.numeric(data_measure$Value), h=12)
data_measure<-mydata[mydata$measure=='Μεταφορικά νησιών Αιγαίου', c("date", "payment_amount")]
data_measure<-mutate(data_measure, total=cumsum(payment_amount))
data_measure<-data_measure[c("date", "total")]
data_measure<-xts(data_measure, order.by=as.POSIXct(data_measure$date))
View(data_measure)
runApp('subsidies/gr')
View(data_measure)
runApp('subsidies/gr')
runApp('subsidies/gr')
runApp('subsidies/gr')
runApp('subsidies/gr')
runApp('subsidies/gr')
# This R script is created as a Shiny application based on processed data from OPEKEPE's announcements
# about Agricultural Development, Fisheries, Direct Payments and Market Measures.
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/shinyapps/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(lubridate)
library(dplyr)
library(shinydashboard)
library(forecast)
library(dygraphs)
library(corrplot)
library(xts)
library(htmlwidgets)
library(RPostgreSQL)
valueFormatter<-"function formatValue(v) {
var suffixes = ['', 'χιλ', 'εκατ', 'δις', 'τρις'];
if (v < 1000) return v;
var magnitude = Math.ceil(String(Math.floor(v)).length / 3-1);
if (magnitude > suffixes.length - 1)
magnitude = suffixes.length - 1;
return String(Math.round(v / Math.pow(10, magnitude * 3), 2)) +suffixes[magnitude]}"
credentials<-read.csv("/home/iliastsergoulas/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = as.character(credentials$host), port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.payments") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date) # Converting character to date
mydata<-mydata[order(mydata$date),]
lastdate=max(mydata$date)
runApp('subsidies/gr')
data_measure<-mydata[mydata$measure=='Μεταφορικά νησιών Αιγαίου', c("date", "payment_amount")]
data_measure<-mutate(data_measure, total=cumsum(payment_amount))
data_measure<-data_measure[c("date", "total")]
data_measure<-xts(data_measure, order.by=as.POSIXct(data_measure$date))
data_measure_predicted <- forecast(as.numeric(data_measure$total), h=as.numeric('12'))
data_measure_predicted <- data.frame(Date = seq(mdy('06/30/2017'), by = 'months', length.out = as.numeric('12')),
Forecast = data_measure_predicted$mean,Hi_95 = data_measure_predicted$upper[,2],
Lo_95 = data_measure_predicted$lower[,2])
data_measure_xts <- xts(data_measure_predicted, order.by = as.POSIXct(data_measure_predicted$Date))
data_measure_predicted <- merge(data_measure, data_measure_xts)
data_measure <- data_measure_predicted[,c("total", "Forecast", "Hi_95", "Lo_95")]
data_measure
runApp('subsidies/gr')
View(data_measure_predicted)
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
cons <- dbListConnections(PostgreSQL())
for(con in cons)
dbDisconnect(con)
source('~/Dropbox/Website/dbimporter.R')
shiny::runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
View(mydata)
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
print(max(mydata$date))
print(max(as.Date(mydata$date)))
print(as.Date(mydata$date))
print(class(mydata$date))
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date)
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date)
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date)
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date)
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date)
?dmy
??dmy
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(lubridate)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date)
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(lubridate)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
View(mydata)
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(lubridate)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
View(mydata)
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
source('~/Dropbox/Website/dbimporter.R')
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(lubridate)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
View(mydata)
mydata$date <- dmy(mydata$date)
View(mydata)
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(lubridate)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
credentials<-read.csv("/home/iliastsergoulas/Dropbox/Website/dbcredentials.csv")
drv <- dbDriver("PostgreSQL") # loads the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # creates a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
View(mydata)
mydata$date <- mdy(mydata$date)
View(mydata)
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
cons <- dbListConnections(PostgreSQL())
for(con in cons)
dbDisconnect(con)
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
View(mydata)
print(s.Date(min(mydata$date)))
print(as.Date(min(mydata$date)))
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer')
shiny::runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/en')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/en')
?fluidpage
?fluidPage
?selectInput
runApp('subsidies/gr')
runApp('subsidies/gr')
