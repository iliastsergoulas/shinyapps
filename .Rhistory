eAttrs <- list()
elabs <- paste("        ", round(as.numeric(ew), 2)) # so it doesn't print on top of the edge
names(elabs) <- names(ew)
eAttrs$label <- elabs
fontsizes <- rep(7, length(elabs))
names(fontsizes) <- names(ew)
eAttrs$fontsize <- fontsizes
plot(myDtm, term=freq.terms, corThreshold=0.25, weighting=T,
edgeAttrs=eAttrs)
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
freq.terms <- findFreqTerms(myDtm, lowfreq=10)[1:25]
assocs <- findAssocs(myDtm, term=freq.terms, corlimit=0.25)
# Recreate edges, using code from plot.DocumentTermMatrix
corrplot<-corrplot(assocs, method="circle")
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
freq.terms <- findFreqTerms(myDtm, lowfreq=10)[1:25]
assocs <- as.data.frame(findAssocs(myDtm, term=freq.terms, corlimit=0.25))
# Recreate edges, using code from plot.DocumentTermMatrix
corrplot<-corrplot(assocs, method="circle")
View(assocs)
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
# This R script is created as a Shiny application to analyze texts such as speeches, press releases, interviews etc
# regarding the agricultural sector.
# The code is available under MIT license, as stipulated in https://github.com/iliastsergoulas/text_analyzer/blob/master/LICENSE.
# Author: Ilias Tsergoulas, Website: www.agristats.eu
library(shiny)
library(shinythemes)
library(wordcloud)
library(tm)
library(base64enc)
library(SnowballC)
library(lubridate)
library(RWeka)
library(rJava)
library(RWekajars)
library(shinydashboard)
library(RPostgreSQL)
library(corrplot)
credentials<-read.csv("/home/iliastsergoulas/dbcredentials.csv") # Reading credentials from csv file
drv <- dbDriver("PostgreSQL") # Loading the PostgreSQL driver
con <- dbConnect(drv, dbname = as.character(credentials$database), # Creating a connection to the postgres database
host = '88.99.13.199', port = as.character(credentials$port),
user = as.character(credentials$user), password = as.character(credentials$password))
mydata <- dbGetQuery(con, "SELECT * from agriculture.agritexts") # Get data
dbDisconnect(con)
dbUnloadDriver(drv)
mydata$date <- dmy(mydata$date) # Converting to date
mystopwords<-c("agronewsgr","για","και","από","των", "οι", "...","ώστε","μέσα", "αυτά","περίπου",
"την","στις","της","του","τον","τους", "τα","να", "τέλος","στιγμή", "ούτε", "μία", "ακόμη","παράδειγμα",
"τις","στους","αύριο","στην","προς", "θα", "ως", "ευρώ","κάτι", "είπε","ενώ","πως","έχω","λένε","κάποια",
"που","στα","κάθε","λέει","στο","στη", "σε", "agrenda","όσο", "πάνω", "δούμε", "κάνει","εμείς","απόφαση",
"ζωντανά","αγρότες","αγροτικής","μήνα", "τη", "φεκ","όχι","μπορεί","εκεί","βεβαίως","καμία","μπορούμε",
"ημέρες","μέρες","στον", "έως", "λόγω", "εκατ","ότι","ήδη", "όλες", "έχω","ακόμα","αυτή","αυτές",
"αγροτικό","ζητά","αλλά","χωρίς", "προ", "ύψους","όλα","όπου", "τσιρώνης", "ίδια", "εγώ","υπάρχουν",
"αγροτικού", "δείτε", "πριν", "πού", "με", "το","πάλι","σημείωσε", "οποία", "κύριο","εάν","χώρο","άνθρωποι",
"πιο", "όλοι", "φωτό","νέα", "δισ", "δεν", "να","μια","άλλων","μόνο","ήταν","αφορά","μόνο","χώρα",
"ειδήσεις","αγροτικές", "μέχρι","μετά","γίνει","έχουν","χώρας","δήλωσε","news","λοιπόν","έτσι","αποτελεί",
"είναι","ανά","νέο","αγροτική","αγροτών","κιλό","https","δόθηκαν","επίσης","μεγάλο","κάνουν","μεγάλη",
"σας","μας","αυτό","έχει","όπως","θέλουν","καθώς","ένα","ελλάδα","είμαστε","δημοσιογράφος","όμως",
"έχουμε","κάνουμε","θέμα","επιπλέον","μην","μου","είτε","στοιχεία","μάλιστα","πρώτη","πρέπει","ένας",
"κατά", "υπό", "πώς", "δις", "όταν", "αποστόλου", "υπουργός", "τότε", "διότι","βάση","είχαμε","δίνει",
"αυτήν","μέσω","χώρου","κυρίως", "μεταξύ","αυτοί","δηλαδή", "ξέρουν","άλλη","σχετικά","οποίες","τρόπο",
"πρώτα","όλη","τώρα","τόνισε","πολύ","οποίο","γιατί","μπορούν","περιοχές","δύο","μιλάμε","κάποιες",
"τόσο","σήμερα","λέω","πληρώσει","ώρα","εδώ","yoleni","μέρα","άλλες","πάρει","εεδ","γιάννης","θέματα",
"γίνεται","άρα","νέας","όλους","ποια","πρώτο","άλλα","θέλω","υπουργέ","συριζα", "θέλω","θέλει","υπάρξει",
"περίοδο","χρόνο", "υπάρχει","τι","αν","κι","σημασία","λπ","περίπτωση","-","yoleni's", "ββ", "ξένοι",
"τομέα","κόσμος","αναπληρωτής","ελληνική","κόσμος","αυτών","πλέον","χρόνια","έρχονται","σχέση","τομέας",
"κάποιος","βλέπουμε","υποστηρίζουμε","δώσουμε","μεγάλες","δε","πάει","κλπ","γι'","κάτω","πίσω","παρά",
"επομένως","αυτός","κόσμο","κύριε","πω","μεγάλα","άλλο","πιστεύω","πάρουν","ας","έναν","είπα","ίδιο","καλά",
"ιδιαίτερα","πούμε","πολλές","μη","πει","μαζί","επειδή","έγινε","γι'","αυτούς","πολλά","πάρα", "αυτούς",
"θέλουμε","κάναμε","θυμίζω","φορά","βοηθήσουμε","είχαν","προκειμένου","πάνε","έχετε","τέτοια","λίγο","είχαν",
"προσπαθούμε","είχε","δημοσιογράφοσ","υπουργόσ","σειρά","αυτού","πάμε",
"agronewsgr", "https", "amp", "food", "read", "https","without","bring","usda", "agency","gov","navigation",
"thanks", "look", "looking", "see", "people", "way","fms","hemp","due","information","press","release","releases",
"gaid", "agchattruth", "foodtruth","agchat","want","list","make","range","site","commission","europa","european",
"agriculture","will", "talk", "now", "new", "forget","like","using","ghg","member","policy","search","also",
"farm", "thank", "book", "year", "week", "photo","today","farmers","states","tools",
"add", "can", "truths", "life", "news", "every","lelyknowhow","farming",
"time", "action", "know", "share", "just", "found","always","day","farms",
"latest", "find", "get", "great", "table", "join", "word", "countries",
"thunderclap", "excited", "better", "voice", "video","use","asa","ahdb",
"paper", "getting", "blogs", "help", "one","unfao","via","...","_",
"best", "animal", "need", "joy", "many", "awesome", "support", "first",
"futureofcap","sacfarmclimate","offers","shows","play","-","means","hort",
"allow","provides","nfutweets","never","century","address","say","since",
"almost","philhoganeu","farmwildlifeuk","min","nyc","around","devex","xhnews","review")
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
corr <- cor(myDtm[,find])
corrplot <- corrplot(corr, type = "upper")
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
dtm <- as.matrix(DocsTermsMat)
corr <- cor(dtm[,find])
corrplot <- corrplot(corr, type = "upper")
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
dtm <- as.matrix(myDtm)
corr <- cor(dtm[,find])
corrplot <- corrplot(corr, type = "upper")
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
dtm <- as.matrix(myDtm)
corr <- cor(dtm)
corrplot <- corrplot(corr, type = "upper")
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
dtm <- as.matrix(myDtm)
words <- rownames(findAssocs(myDtm, query, .005))[1:20]
find <- colnames(dtm) %in% words
corr <- cor(dtm[,find])
corrplot <- corrplot(corr, type = "upper")
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
words <- names(findAssocs(myDtm, "παραγωγή", .2)[2:11])
oi <- as.matrix(dtm)
find <- colnames(oi) %in% words
corr <- cor(oi[,find])
corrplot(corr)
View(dtm)
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
words <- names(findAssocs(myDtm, "παραγωγή", .2))
oi <- as.matrix(dtm)
find <- colnames(oi) %in% words
corr <- cor(oi[,find])
corrplot(corr)
View(corr)
View(corrplot)
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
words <- names(findAssocs(myDtm, "παραγωγής", .2)[2:11])
oi <- as.matrix(dtm)
find <- colnames(oi) %in% words
corr <- cor(oi[,find])
corrplot(corr)
View(corr)
print(words)
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
words <- names(findAssocs(myDtm, "παραγωγής", .8)[2:11])
oi <- as.matrix(dtm)
find <- colnames(oi) %in% words
corr <- cor(oi[,find])
corrplot(corr)
print(words)
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
words <- names(findAssocs(myDtm, "παραγωγής", .01)[2:11])
oi <- as.matrix(dtm)
find <- colnames(oi) %in% words
corr <- cor(oi[,find])
corrplot(corr)
print(words)
mydata.text<-paste(unlist(mydata$text), collapse =" ")
myCorpus <- Corpus(VectorSource(mydata.text)) # Building a corpus
# Creating matrix of texts after "cleaning" them from anything unnecessary
myDtm <- TermDocumentMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
myTdm<-DocumentTermMatrix(myCorpus, control = list(removePunctuation = TRUE, stopwords = c(mystopwords, stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
words <- names(findAssocs(myTdm, "παραγωγής", .01)[2:11])
oi <- as.matrix(myTdm)
find <- colnames(oi) %in% words
corr <- cor(oi[,find])
corrplot(corr)
print(words)
print(myTdm)
install.packages("textreuse")
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
corpus <- TextReuseCorpus(dir = dir, tokenizer = tokenize_ngrams, n = 5,
progress = FALSE)
comparisons <- pairwise_compare(corpus, jaccard_similarity, progress = FALSE)
comparisons[1:4, 1:4]
print(comparisons)
?TextReuseCorpus
corpus <- TextReuseCorpus(text=mydata, tokenizer = tokenize_ngrams, n = 5,
progress = FALSE)
comparisons <- pairwise_compare(corpus, jaccard_similarity, progress = FALSE)
comparisons[1:4, 1:4]
print(comparisons)
?TextReuseTextDocument
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
install.packages('dendextend')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
View(test)
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
install.packages("stringi")
install.packages("stringi")
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
?str_sub
??str_sub
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
View(test)
source('~/Desktop/paseges.R')
View(test)
library(stringr)
test<-read.csv("/home/iliastsergoulas/Dropbox/Website/backup/paseges.csv")
test$text <- substring(test$text, 3800)
test$text <- str_sub(test$text, end=-4800)
View(test)
source('~/Desktop/paseges.R')
View(test)
library(stringr)
test<-read.csv("/home/iliastsergoulas/Dropbox/Website/backup/paseges.csv")
test$text <- substring(test$text, 3800)
test$text <- str_sub(test$text, end=-4800)
View(test)
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
?`dbWriteTable,PostgreSQLConnection,character,data.frame-method`
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
cons <- dbListConnections(PostgreSQL())
for(con in cons)
dbDisconnect(con)
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
View(test)
View(test)
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
print(test$text[2])
print(test$text[5])
print(test$text[8])
source('~/Desktop/paseges.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
cons <- dbListConnections(PostgreSQL())
for(con in cons)
dbDisconnect(con)
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
shiny::runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
source('~/Desktop/paseges.R')
View(test)
print(test$text[2])
print(test$text[1])
source('~/Desktop/paseges.R')
View(test)
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
View(test)
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
View(test)
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
View(test)
print(test$text[2])
source('~/Desktop/paseges.R')
View(test)
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Dropbox/Website/agristats_applications/dbimporter.R')
source('~/Desktop/paseges.R')
View(test)
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
View(test)
source('~/Desktop/paseges.R')
source('~/Desktop/paseges.R')
View(test)
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
print(test$text[1])
source('~/Desktop/paseges.R')
View(test)
source('~/Desktop/paseges.R')
shiny::runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/en')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/en')
runApp('~/Dropbox/Website/agristats_applications/text_analyzer/gr')
library(shiny); print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
cons <- dbListConnections((My)PostgreSQL())
cons <- dbListConnections(PostgreSQL())
for(con in cons)
dbDisconnect(con)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
install.packages("sf")
print(source('~/Desktop/beetest.R')$value)
install.packages("sf")
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
cons <- dbListConnections(PostgreSQL())
for(con in cons)
dbDisconnect(con)
print(source('~/Desktop/beetest.R')$value)
print(source('~/Desktop/beetest.R')$value)
runApp('sector/reforestable_areas')
runApp('~/Dropbox/Website/agristats_applications/beekeeping')
runApp('~/Dropbox/Website/agristats_applications/beekeeping/en')
runApp('sector/forest_areas')
