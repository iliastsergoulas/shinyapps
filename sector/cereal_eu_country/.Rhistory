shiny::runApp()
runApp('~/Dropbox/Website/shiny/prices')
runApp('~/Dropbox/Website/shiny/prices')
install.packages("corrplot")
runApp('~/Dropbox/Website/shiny/prices')
runApp('~/Dropbox/Website/shiny/prices')
runApp('~/Dropbox/Website/shiny/prices')
library(shiny)
library(googleVis)
library(shinythemes)
library(ggplot2)
library(directlabels)
library(scales)
library(dplyr)
library(lubridate)
library(shinydashboard)
library(corrplot)
library(Quandl)
printMoney <- function(x){ # A function to show number as currency
format(x, digits=10, nsmall=2, decimal.mark=",", big.mark=".")
}
percent <- function(x, digits = 2, format = "f", ...) { # A function to show number as percentage
paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
}
specify_decimal <- function(x, k) format(round(x, k), nsmall=k) # A function to show number with k decimal places
Quandl.api_key("KCo4sXzWEzSAb81ff3VP") # Setting API key to have unlimited access to databases
data_codes<-c("COM/WLD_SUGAR_EU", "COM/WLD_SUGAR_WLD", "COM/WLD_SUGAR_US", # Setting wanted Quandl database codes
"COM/COFFEE_BRZL", "COM/COFFEE_CLMB", "COM/WLD_COFFEE_ARABIC",
"COM/RICE_2", "COM/WLD_RICE_05", "COM/WLD_RICE_05_VNM")
# Setting Quandl codes respective description
data_descr<-c("Sugar Price, EU, cents/kg", "Sugar Price, world, cents/kg", "Sugar Price, US, cents/kg",
"Coffee, Brazilian, Comp.", "Coffee, Colombian, NY lb.", "Coffee Price, Arabica, cents/kg",
"Rice, Long Grain Milled, No. 2 AR", "Rice Price, Thailand, 5%, $/mt", "Rice Price, Vietnamese, 5%, $/mt")
data_product<-c("Sugar","Sugar","Sugar",
"Coffee","Coffee","Coffee",
"Rice","Rice","Rice")
data_quandl<-data.frame(data_descr, data_codes, data_product) # Binding codes and description to dataframe
data_filtered<-as.data.frame(data_quandl[which(data_quandl$data_product=="Coffee"),])
mydata<-data.frame(Date= character(0), Value= character(0), Description=character(0))
for (i in 1:nrow(data_filtered)){
temp<-Quandl(as.character(data_filtered[i,2]))
temp$Description<-as.character(data_filtered[i,1])
colnames(temp)<-c("Date", "Value", "Description")
mydata<-rbind(mydata, temp)
}
mydata$Date<-format(mydata$Date, "%d/%m/%Y")
data_filtered<-as.data.frame(data_quandl[which(data_quandl$data_product=="Coffee"),])
mydata<-data.frame(Date= character(0), Value= character(0), Description=character(0))
for (i in 1:nrow(data_filtered)){
temp<-Quandl(as.character(data_filtered[i,2]))
temp$Description<-as.character(data_filtered[i,1])
colnames(temp)<-c("Date", "Value", "Description")
mydata<-rbind(mydata, temp)
}
data_filtered<-as.data.frame(data_quandl[which(data_quandl$data_product=="Coffee"),])
mydata<-data.frame(Date= character(0), Value= character(0), Description=character(0))
for (i in 1:nrow(data_filtered)){
temp<-Quandl(as.character(data_filtered[i,2]))
temp$Description<-as.character(data_filtered[i,1])
colnames(temp)<-c("Date", "Value", "Description")
mydata<-rbind(mydata, temp)
}
library(shiny)
library(googleVis)
library(shinythemes)
library(ggplot2)
library(directlabels)
library(scales)
library(dplyr)
library(lubridate)
library(shinydashboard)
library(corrplot)
library(Quandl)
printMoney <- function(x){ # A function to show number as currency
format(x, digits=10, nsmall=2, decimal.mark=",", big.mark=".")
}
percent <- function(x, digits = 2, format = "f", ...) { # A function to show number as percentage
paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
}
specify_decimal <- function(x, k) format(round(x, k), nsmall=k) # A function to show number with k decimal places
Quandl.api_key("KCo4sXzWEzSAb81ff3VP") # Setting API key to have unlimited access to databases
data_codes<-c("COM/WLD_SUGAR_EU", "COM/WLD_SUGAR_WLD", "COM/WLD_SUGAR_US", # Setting wanted Quandl database codes
"COM/COFFEE_BRZL", "COM/COFFEE_CLMB", "COM/WLD_COFFEE_ARABIC",
"COM/RICE_2", "COM/WLD_RICE_05", "COM/WLD_RICE_05_VNM")
# Setting Quandl codes respective description
data_descr<-c("Sugar Price, EU, cents/kg", "Sugar Price, world, cents/kg", "Sugar Price, US, cents/kg",
"Coffee, Brazilian, Comp.", "Coffee, Colombian, NY lb.", "Coffee Price, Arabica, cents/kg",
"Rice, Long Grain Milled, No. 2 AR", "Rice Price, Thailand, 5%, $/mt", "Rice Price, Vietnamese, 5%, $/mt")
data_product<-c("Sugar","Sugar","Sugar",
"Coffee","Coffee","Coffee",
"Rice","Rice","Rice")
data_quandl<-data.frame(data_descr, data_codes, data_product) # Binding codes and description to dataframe
data_filtered<-as.data.frame(data_quandl[which(data_quandl$data_product=="Coffee"),])
mydata<-data.frame(Date= character(0), Value= character(0), Description=character(0))
for (i in 1:nrow(data_filtered)){
temp<-Quandl(as.character(data_filtered[i,2]))
temp$Description<-as.character(data_filtered[i,1])
colnames(temp)<-c("Date", "Value", "Description")
mydata<-rbind(mydata, temp)
}
View(data_filtered)
data_filtered<-as.data.frame(data_quandl[which(data_quandl$data_product==input$commodity),])
mydata<-data.frame(Date= character(0), Value= character(0), Description=character(0))
data_filtered<-as.data.frame(data_quandl[which(data_quandl$data_product=="Coffee"),])
mydata<-data.frame(Date= character(0), Value= character(0), Description=character(0))
temp<-Quandl(as.character(data_filtered[1,2]))
install.packages(c("BH", "colorspace", "countrycode", "DBI", "digest", "e1071", "eurostat", "evaluate", "ggplot2", "ggthemes", "googleVis", "htmlwidgets", "jsonlite", "knitr", "leaflet", "maptools", "NLP", "openssl", "Rcpp", "rgeos", "rmarkdown", "rsconnect", "rsdmx", "RWeka", "scales", "shiny", "sp", "stringr", "tidyr", "tm", "xml2", "yaml"))
install.packages(c("BH", "colorspace", "countrycode", "DBI",
install.packages(c("BH", "rsdmx", "RWeka", "scales"))
shiny::runApp('~/Dropbox/Website/shiny/prices')
temp<-Quandl(as.character(data_filtered[2,2]))
runApp()
runApp('~/Dropbox/Website/shiny/prices')
runApp('~/Dropbox/Website/shiny/prices')
shinyApp(ui, server)
runApp('~/Desktop')
runApp('~/Desktop/Untitled Folder')
runApp('~/Dropbox/Website/shiny/sector/eggs_plants')
